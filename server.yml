Parameters:
  EnvironmentName:
    Description: The name of the infrastructure
    Type: String

  AMIToUse:
    Description: The id of the ami to be used by the launch configuration
    Type: String
  InstanceType:
    Description: The instance type to be used
    Type: String  




Resources:
  LoadBalancerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: configure http for loadbalancer
      VpcId: 
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"

      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: defining firewalls for the web servers
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  S3ReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: 
              Service: 
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
  
  RoleInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
          - !Ref S3ReadOnlyRole
  WebAppLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          echo '<h1 style="text-align:center;">it works! Udagram, Udacity</h1>' > index.html
      ImageId: !Ref AMIToUse
      SecurityGroups:
        - !Ref WebServerSecurityGroup
        
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref RoleInstanceProfile
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: "10"

  WebAppAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue:
            !Sub "${EnvironmentName}-private-subnets"
      LaunchConfigurationName: !Ref WebAppLaunchConfiguration
      MinSize: '4'
      MaxSize: '5'
      TargetGroupARNs:
        - !Ref WebTargetGroup


  WebAppLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue: 
            !Sub "${EnvironmentName}-pub-subnet-1-id"
        - Fn::ImportValue:
            !Sub "${EnvironmentName}-pub-subnet-2-id"
      SecurityGroups:
        - !Ref LoadBalancerSecGroup
  
  LBListeners:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebTargetGroup
      LoadBalancerArn:
        !Ref WebAppLoadBalancer
      Port: '80'
      Protocol: HTTP

  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref WebTargetGroup
      Conditions:
        - Field: path-pattern
          Values: [/]

      ListenerArn: !Ref LBListeners
      Priority: 1

  WebTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"



Outputs:
  LoadBalancer:
    Description: Reference to the load balancer
    Value: !Ref WebAppLoadBalancer
    Export:
      Name: !Sub "${EnvironmentName}-LB"

  LoadBalancerUrl:
    Description: Reference to the load balabcer url
    Value: !Join ["", ["http://",!GetAtt WebAppLoadBalancer.DNSName]]
    Export:
      Name: !Sub "${EnvironmentName}-LBUrl"

