Parameters:
  EnvironmentName:
    Description: The environment name for the infrastructure
    Type: String

  VpcCIDR:
    Description: The vpc cidr block ip definition
    Type: String
    Default: 10.0.0.0/16
  
  PublicSubnet1CIDR:
    Description: The public subnet-1 cidr ipaddress
    Type: String
    Default: 10.0.0.0/24
  
  PublicSubnet2CIDR:
    Description: The public subnet-2 cidr ipaddress
    Type: String 
    Default: 10.0.1.0/24

  PrivateSubnet1CIDR:
    Description: The private subnet-1 cidr ip address
    Type: String
    Default: 10.0.2.0/24

  PrivateSubnet2CIDR:
    Description: The private subnet-2 cidr ip address
    Type: String
    Default: 10.0.3.0/24


Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsHostnames: true
      CidrBlock: !Ref VpcCIDR
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-VPC"
  
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-IG"
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: true
      CidrBlock: !Ref PublicSubnet1CIDR
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-public-subnet-1"
  
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: true
      CidrBlock: !Ref PublicSubnet2CIDR
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-public-subnet-2"

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: false
      CidrBlock: !Ref PrivateSubnet1CIDR
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-private-subnet-1"

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: false
      CidrBlock: !Ref PrivateSubnet2CIDR
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-private-subnet-2"

  NatGatewayEIP1:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGatewayEIP2:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP1.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-natgateway-1"

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP2.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:                         
        - Key: Name
          Value: !Sub "${EnvironmentName}-natgateway-2"

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-public-RT"

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  
  PublicSubnet1RouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteAssociation:          
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable 
      SubnetId: !Ref PublicSubnet2

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-private-RT-1"

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1

  PrivateSubnet1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1
  
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable            
    Properties:                           
      VpcId: !Ref VPC                     
      Tags:
        - Key: Name                   
          Value: !Sub "${EnvironmentName}-private-RT-2" 

  DefaultPrivateRoute2:                   
    Type: AWS::EC2::Route                 
    Properties:                           
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0     
      NatGatewayId: !Ref NatGateway2                                                 
  PrivateSubnet2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:                       
      SubnetId: !Ref PrivateSubnet2       
      RouteTableId: !Ref PrivateRouteTable2

Outputs:
  VPC:
    Description: A reference to the vpc
    Value: !Ref VPC
    Export:
      Name: !Sub "${EnvironmentName}-VPCID"
  PublicSubnets:
    Description: A reference to the public subnets list
    Value: !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export:
      Name: !Sub "${EnvironmentName}-public-subnets"

  PrivateSubnets:
    Description: A list of the private subnets
    Value: !Join [",", [!Ref PrivateSubnet1,!Ref PrivateSubnet2]]
    Export:
      Name: !Sub "${EnvironmentName}-private-subnets"

  PublicSubnet01:
    Description: A reference to public subnet-1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub "${EnvironmentName}-pub-subnet-1-id"

  PublicSubnet02:
    Description: A reference to public subnet2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub "${EnvironmentName}-pub-subnet-2-id"

  PrivateSubnet01:
    Description: A reference to private subnet1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "${EnvironmentName}-priv-subnet-1-id"

  PrivateSubnet02:
    Description: A reference to private subnet2 
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub "${EnvironmentName}-priv-subnet-2-id"
